AWSTemplateFormatVersion: 2010-09-09
Description: Demo VPC

Parameters:
  VpcId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>
    Default: /demo/landing-zone/vpc/vpc-id
  PublicSubnet1Id:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Subnet::Id>
    Default: /demo/landing-zone/vpc/public-subnet-1-id
  PublicSubnet2Id:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Subnet::Id>
    Default: /demo/landing-zone/vpc/public-subnet-2-id
  PublicSubnet3Id:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Subnet::Id>
    Default: /demo/landing-zone/vpc/public-subnet-3-id
  HostedZoneId:
    Type: String
    Default: Z10273433NYWURAQVWYW5
  HostedZoneName:
    Type: String
    Default: aws-sandbox.eelviny.me

Resources:
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: demo-application-loadbalancer
      Type: application
      IpAddressType: dualstack
      Scheme: internet-facing
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup
      SubnetMappings:
        - SubnetId: !Ref PublicSubnet1Id
        - SubnetId: !Ref PublicSubnet2Id
        - SubnetId: !Ref PublicSubnet3Id

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Protocol: HTTPS
      Port: 443
      SslPolicy: ELBSecurityPolicy-FS-1-2-Res-2020-10
      Certificates:
        - CertificateArn: !Ref LoadBalancerCertificate
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig:
            StatusCode: 200
            MessageBody: Hi there! This is a demo message from your favourite demo load balancer.
            ContentType: text/plain

  LoadBalancerCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Sub loadbalancer.${HostedZoneName}
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: !Sub loadbalancer.${HostedZoneName}
          HostedZoneId: !Ref HostedZoneId

  LoadBalancerDnsRecord:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: !Ref HostedZoneId
      RecordSets:
        - Name: !Sub loadbalancer.${HostedZoneName}
          Type: A
          AliasTarget:
            EvaluateTargetHealth: true
            DNSName: !GetAtt LoadBalancer.DNSName
            HostedZoneId: !GetAtt LoadBalancer.CanonicalHostedZoneID
        - Name: !Sub loadbalancer.${HostedZoneName}
          Type: AAAA
          AliasTarget:
            EvaluateTargetHealth: true
            DNSName: !GetAtt LoadBalancer.DNSName
            HostedZoneId: !GetAtt LoadBalancer.CanonicalHostedZoneID

  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: loadbalancer-securitygroup
      GroupDescription: Application Load Balancer security group
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - Description: Allow inbound web traffic
          FromPort: 443
          ToPort: 443
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: loadbalancer-securitygroup